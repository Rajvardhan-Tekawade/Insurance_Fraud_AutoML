# -*- coding: utf-8 -*-
"""AutoML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JyZ8JrO1ksVUdTkcgrbGNE55PoctyHmB
"""

!pip install pycaret pandas matplotlib seaborn openpyxl

"""Import libraries:"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

"""Load the insurance dataset"""

# Load the dataset directly from the URL
url = 'https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv'
df = pd.read_csv(url)

"""Explore the dataset:"""

# Display the first few rows
df.head()

# Check for missing values
df.isnull().sum()

# Get dataset information
df.info()

# Statistical summary
df.describe()

"""Encode Categorical Variables:

PyCaret handles categorical variables internally, but it's good practice to ensure they are of type 'category'.
"""

# Convert categorical columns to 'category' dtype
categorical_cols = ['sex', 'smoker', 'region']
for col in categorical_cols:
    df[col] = df[col].astype('category')

"""Visualize Data Distributions:"""

# Visualize the distribution of charges
sns.histplot(df['charges'], bins=50, kde=True)
plt.title('Distribution of Charges')
plt.xlabel('Charges')
plt.ylabel('Frequency')
plt.show()

"""Apply AutoML with PyCaret
Import PyCaret's Regression Module:
"""

from pycaret.regression import *

"""Initialize the Setup:"""

# Initialize the setup
s = setup(data=df, target='charges', session_id=123)

"""Compare Models:"""

# Compare all models and select the best one
best_model = compare_models()

"""Finalize the Gradient Boosting Regressor Model:"""

# Finalize the Gradient Boosting Regressor model
final_model = finalize_model(best_model)

"""Generate Predictions on the Dataset
Use the finalized model to predict charges for each record in your dataset.
"""

# Generate predictions
predictions = predict_model(final_model, data=df)

"""This will add a new column named Label to the DataFrame, representing the predicted charges.

Evaluate Model Performance
Assess the performance of the finalized model using PyCaret's evaluation tools.
"""

# Evaluate the model
evaluate_model(final_model)

"""Export Predictions for Power BI Visualization
Prepare your data for visualization by exporting the predictions to an Excel file.
"""

# Export predictions to Excel
predictions.to_excel('insurance_predictions.xlsx', index=False)